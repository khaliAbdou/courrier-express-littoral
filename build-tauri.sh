#!/bin/bash

# Script de build automatis√© pour ANOR Desktop (Tauri)
# Usage: ./build-tauri.sh [dev|build|debug]

set -e

echo "üöÄ ANOR Desktop - Build Tauri"
echo "================================"

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages color√©s
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# V√©rifier les pr√©requis
check_prerequisites() {
    log_info "V√©rification des pr√©requis..."
    
    # V√©rifier Node.js
    if ! command -v node &> /dev/null; then
        log_error "Node.js non trouv√©. Installez Node.js depuis https://nodejs.org/"
        exit 1
    fi
    log_success "Node.js trouv√©: $(node --version)"
    
    # V√©rifier npm
    if ! command -v npm &> /dev/null; then
        log_error "npm non trouv√©."
        exit 1
    fi
    log_success "npm trouv√©: $(npm --version)"
    
    # V√©rifier Rust
    if ! command -v rustc &> /dev/null; then
        log_error "Rust non trouv√©. Installez Rust depuis https://rustup.rs/"
        exit 1
    fi
    log_success "Rust trouv√©: $(rustc --version)"
    
    # V√©rifier Cargo
    if ! command -v cargo &> /dev/null; then
        log_error "Cargo non trouv√©."
        exit 1
    fi
    log_success "Cargo trouv√©: $(cargo --version)"
    
    # V√©rifier si Tauri CLI est install√©
    if ! command -v tauri &> /dev/null; then
        log_warning "Tauri CLI non trouv√©. Installation..."
        npm install -g @tauri-apps/cli@latest
        if [ $? -eq 0 ]; then
            log_success "Tauri CLI install√© avec succ√®s"
        else
            log_error "√âchec de l'installation de Tauri CLI"
            exit 1
        fi
    else
        log_success "Tauri CLI trouv√©: $(tauri --version)"
    fi
}

# Installer les d√©pendances
install_dependencies() {
    log_info "Installation des d√©pendances..."
    npm install
    if [ $? -eq 0 ]; then
        log_success "D√©pendances install√©es avec succ√®s"
    else
        log_error "√âchec de l'installation des d√©pendances"
        exit 1
    fi
}

# Build de d√©veloppement
dev_build() {
    log_info "Lancement en mode d√©veloppement..."
    tauri dev
}

# Build de production
production_build() {
    log_info "Build de production en cours..."
    tauri build
    
    if [ $? -eq 0 ]; then
        log_success "Build de production termin√© avec succ√®s!"
        echo ""
        log_info "Fichiers g√©n√©r√©s dans:"
        echo "  üìÅ src-tauri/target/release/bundle/msi/ (Installeur Windows)"
        echo "  üìÅ src-tauri/target/release/bundle/nsis/ (Installeur NSIS)"
        echo "  üìÅ src-tauri/target/release/bundle/ (Autres formats)"
        echo ""
        log_info "Testez l'ex√©cutable avant distribution!"
    else
        log_error "√âchec du build de production"
        exit 1
    fi
}

# Build de debug
debug_build() {
    log_info "Build de debug en cours (plus rapide)..."
    tauri build --debug
    
    if [ $? -eq 0 ]; then
        log_success "Build de debug termin√© avec succ√®s!"
        echo ""
        log_info "Fichiers g√©n√©r√©s dans:"
        echo "  üìÅ src-tauri/target/debug/bundle/"
        echo ""
        log_warning "Attention: Version debug - performance r√©duite"
    else
        log_error "√âchec du build de debug"
        exit 1
    fi
}

# Menu principal
main() {
    check_prerequisites
    install_dependencies
    
    case "${1:-build}" in
        "dev")
            dev_build
            ;;
        "build")
            production_build
            ;;
        "debug")
            debug_build
            ;;
        *)
            echo "Usage: $0 [dev|build|debug]"
            echo ""
            echo "  dev    - Lance l'application en mode d√©veloppement"
            echo "  build  - Cr√©e l'ex√©cutable de production (d√©faut)"
            echo "  debug  - Cr√©e l'ex√©cutable de debug (plus rapide)"
            exit 1
            ;;
    esac
}

# Ex√©cuter le script principal
main "$@"